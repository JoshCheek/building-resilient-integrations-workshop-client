#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)
require 'resilint'

data_file = "./data"
user_id   = File.read(data_file) if File.exist? data_file

post_registration = lambda do |user_id|
  File.write data_file, user_id
end

resilint = Resilint.registered(
  base_url:          'https://resilient-integration-workshop.herokuapp.com',
  post_registration: post_registration,
  user_name:         'JoshCheek',
  user_id:           user_id,
  timeout:           1,
)


def self.attempt(msg)
  puts "\e[33m#{msg}\e[0m"
end
def self.error(msg)
  puts "  \e[31m#{msg}\e[0m"
end
def self.success(msg)
  puts "  \e[32m#{msg}\e[0m"
end

loop do
  attempt "Excavating"
  if found = resilint.excavate
    success "Found gold at #{found}"
  else
    error "Failed to excavate, trying again"
    next
  end

  if found[:value] < 2
    error "Not going to store, value of #{found[:value]} is too low"
    next
  end

  attempt "Storing gold"
  until resilint.store found.fetch(:bucket_id)
    error "Failed to store, trying again"
  end
  success 'Stored gold'
end
